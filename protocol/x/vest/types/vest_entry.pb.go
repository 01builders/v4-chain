// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dydxprotocol/vest/vest_entry.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	_ "github.com/cosmos/gogoproto/types"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// VestEntry specifies a Vester Account and the rate at which tokens are
// dripped into the corresponding Treasury Account.
type VestEntry struct {
	// The module account to vest tokens from.
	// This is also the key to this `VestEntry` in state.
	VesterAccount string `protobuf:"bytes,1,opt,name=vester_account,json=vesterAccount,proto3" json:"vester_account,omitempty"`
	// The module account to vest tokens to.
	TreasuryAccount string `protobuf:"bytes,2,opt,name=treasury_account,json=treasuryAccount,proto3" json:"treasury_account,omitempty"`
	// The denom of the token to vest.
	Denom string `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	// The start time of vest. Before this time, no vest will occur.
	StartTime time.Time `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3,stdtime" json:"start_time"`
	// The end time of vest. At this target date, all funds should be in the
	// Treasury Account and none left in the Vester Account.
	EndTime time.Time `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3,stdtime" json:"end_time"`
}

func (m *VestEntry) Reset()         { *m = VestEntry{} }
func (m *VestEntry) String() string { return proto.CompactTextString(m) }
func (*VestEntry) ProtoMessage()    {}
func (*VestEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d3eb625294a27a6, []int{0}
}
func (m *VestEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VestEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VestEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VestEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VestEntry.Merge(m, src)
}
func (m *VestEntry) XXX_Size() int {
	return m.Size()
}
func (m *VestEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_VestEntry.DiscardUnknown(m)
}

var xxx_messageInfo_VestEntry proto.InternalMessageInfo

func (m *VestEntry) GetVesterAccount() string {
	if m != nil {
		return m.VesterAccount
	}
	return ""
}

func (m *VestEntry) GetTreasuryAccount() string {
	if m != nil {
		return m.TreasuryAccount
	}
	return ""
}

func (m *VestEntry) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *VestEntry) GetStartTime() time.Time {
	if m != nil {
		return m.StartTime
	}
	return time.Time{}
}

func (m *VestEntry) GetEndTime() time.Time {
	if m != nil {
		return m.EndTime
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*VestEntry)(nil), "dydxprotocol.vest.VestEntry")
}

func init() {
	proto.RegisterFile("dydxprotocol/vest/vest_entry.proto", fileDescriptor_9d3eb625294a27a6)
}

var fileDescriptor_9d3eb625294a27a6 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x33, 0x6a, 0xb5, 0x1d, 0xf1, 0x2f, 0x74, 0x11, 0xb2, 0x98, 0x94, 0x82, 0x58, 0x37,
	0x33, 0xa0, 0xee, 0xa5, 0x15, 0x5f, 0xa0, 0x88, 0x0b, 0x37, 0x21, 0x3f, 0x63, 0x2c, 0x34, 0x99,
	0x30, 0x73, 0x23, 0xcd, 0x5b, 0xf4, 0xb1, 0xba, 0xec, 0xd2, 0x95, 0x4a, 0xf2, 0x14, 0xee, 0x64,
	0x66, 0x88, 0xe8, 0xd2, 0x4d, 0xb8, 0xf9, 0xce, 0xb9, 0x87, 0x39, 0x5c, 0x3c, 0x4e, 0xeb, 0x74,
	0x55, 0x4a, 0x01, 0x22, 0x11, 0x4b, 0xf6, 0xca, 0x15, 0x98, 0x4f, 0xc8, 0x0b, 0x90, 0x35, 0x35,
	0x82, 0x7b, 0xf6, 0xdb, 0x43, 0xb5, 0xec, 0x07, 0x99, 0x10, 0xd9, 0x92, 0x33, 0x43, 0xe3, 0xea,
	0x99, 0xc1, 0x22, 0xe7, 0x0a, 0xa2, 0xbc, 0xb4, 0x3b, 0xfe, 0x30, 0x13, 0x99, 0x30, 0x23, 0xd3,
	0x93, 0xa5, 0xe3, 0x2f, 0x84, 0x07, 0x8f, 0x5c, 0xc1, 0xbd, 0x4e, 0x77, 0xcf, 0xf1, 0xb1, 0x0e,
	0xe3, 0x32, 0x8c, 0x92, 0x44, 0x54, 0x05, 0x78, 0x68, 0x84, 0x26, 0x83, 0xf9, 0x91, 0xa5, 0x53,
	0x0b, 0xdd, 0x4b, 0x7c, 0x0a, 0x92, 0x47, 0xaa, 0x92, 0xf5, 0x8f, 0x71, 0xc7, 0x18, 0x4f, 0x3a,
	0xde, 0x59, 0x87, 0xb8, 0x97, 0xf2, 0x42, 0xe4, 0xde, 0xae, 0xd1, 0xed, 0x8f, 0x7b, 0x87, 0xb1,
	0x82, 0x48, 0x42, 0xa8, 0x1f, 0xe9, 0xed, 0x8d, 0xd0, 0xe4, 0xf0, 0xca, 0xa7, 0xb6, 0x01, 0xed,
	0x1a, 0xd0, 0x87, 0xae, 0xc1, 0xac, 0xbf, 0x79, 0x0f, 0x9c, 0xf5, 0x47, 0x80, 0xe6, 0x03, 0xb3,
	0xa7, 0x15, 0xf7, 0x16, 0xf7, 0x79, 0x91, 0xda, 0x88, 0xde, 0x3f, 0x22, 0x0e, 0x78, 0x91, 0x6a,
	0x3e, 0x9b, 0x6e, 0x1a, 0x82, 0xb6, 0x0d, 0x41, 0x9f, 0x0d, 0x41, 0xeb, 0x96, 0x38, 0xdb, 0x96,
	0x38, 0x6f, 0x2d, 0x71, 0x9e, 0x2e, 0xb2, 0x05, 0xbc, 0x54, 0x31, 0x4d, 0x44, 0xce, 0xfe, 0x9e,
	0xe3, 0x86, 0xad, 0xec, 0x4d, 0xa0, 0x2e, 0xb9, 0x8a, 0xf7, 0x8d, 0x72, 0xfd, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0xd6, 0x47, 0x08, 0xf1, 0xb5, 0x01, 0x00, 0x00,
}

func (m *VestEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VestEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VestEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.EndTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EndTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintVestEntry(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x2a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.StartTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StartTime):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintVestEntry(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x22
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintVestEntry(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TreasuryAccount) > 0 {
		i -= len(m.TreasuryAccount)
		copy(dAtA[i:], m.TreasuryAccount)
		i = encodeVarintVestEntry(dAtA, i, uint64(len(m.TreasuryAccount)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.VesterAccount) > 0 {
		i -= len(m.VesterAccount)
		copy(dAtA[i:], m.VesterAccount)
		i = encodeVarintVestEntry(dAtA, i, uint64(len(m.VesterAccount)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintVestEntry(dAtA []byte, offset int, v uint64) int {
	offset -= sovVestEntry(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *VestEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.VesterAccount)
	if l > 0 {
		n += 1 + l + sovVestEntry(uint64(l))
	}
	l = len(m.TreasuryAccount)
	if l > 0 {
		n += 1 + l + sovVestEntry(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovVestEntry(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StartTime)
	n += 1 + l + sovVestEntry(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EndTime)
	n += 1 + l + sovVestEntry(uint64(l))
	return n
}

func sovVestEntry(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozVestEntry(x uint64) (n int) {
	return sovVestEntry(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *VestEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVestEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VestEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VestEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesterAccount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVestEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVestEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VesterAccount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TreasuryAccount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVestEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVestEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TreasuryAccount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVestEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVestEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthVestEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthVestEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.StartTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthVestEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthVestEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.EndTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipVestEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVestEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipVestEntry(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowVestEntry
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVestEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVestEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthVestEntry
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupVestEntry
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthVestEntry
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthVestEntry        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowVestEntry          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupVestEntry = fmt.Errorf("proto: unexpected end of group")
)
