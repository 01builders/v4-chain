syntax = "proto3";
package dydxprotocol.prices;

option go_package = "github.com/dydxprotocol/v4/x/prices/types";

// Market defines the price configuration for a single market relative to
// quoteCurrency.
message Market {

  // Unique, sequentially-generated value.
  uint32 id = 1;

  // The human readable name of the market pair (e.g. `BTC-USD` or `BTC-ETH`).
  string pair = 2;

  // Static value. The exponent of the price.
  // For example if `Exponent == -5` then a `Value` of `1,000,000,000`
  // represents ``$10,000`. Therefore `10 ^ Exponent` represents the smallest
  // price step (in dollars) that can be recorded.
  sint32 exponent = 3;

  // The list of exchanges to query to determine the price.
  repeated uint32 exchanges = 4;

  // The minimum number of exchanges that should be reporting a live price for
  // a price update to be considered valid.
  uint32 min_exchanges = 5;

  // The minimum allowable change in the `Price` value for a given update.
  // Measured as `1e-6`.
  uint32 min_price_change_ppm = 6;

  // The variable value that is updated by oracle price updates. `0` if it has
  // never been updated, `>0` otherwise.
  uint64 price = 7;
}
